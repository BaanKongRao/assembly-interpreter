        lw 0 2 mcand ;load multiplicand to reg 2
        lw 0 3 mplier ;load multiplier to reg 3
        lw 0 4 bitC ;load bit count in to reg 4
        lw 0 5 one ;load pivot to reg 5
mul     beq 4 0 done ;if bit count equal 0 jump to done
        lw 0 6 neg1 ;load -1 to reg 6
        add 4 6 4 ;minus bit count by 1
        nand 2 5 6 ;nand mcand and pivot to check bit
        nand 6 6 6 ;nand result to flip bits
        beq 6 0 skip ;skip if result equal 0
        add 1 3 1 ;add mplier to result
skip    add 5 5 5 ;shift pivot left
        add 3 3 3 ;shift mplier left
        lw 0 6 mulAd ;load mul for call(loop)
        jalr 6 0 ;loop
done    halt ;stop program
mcand   .fill 32766
mplier  .fill 10383
bitC    .fill 16
one     .fill 1
neg1    .fill -1
mulAd   .fill mul